version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: fraud_detection_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: fraud_detection
      MYSQL_USER: fraud_user
      MYSQL_PASSWORD: fraud_pass
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    command: >
      --default-authentication-plugin=mysql_native_password
      --max_allowed_packet=512M
      --innodb_buffer_pool_size=4G
      --innodb_log_file_size=512M
      --max_connections=300
      --thread_cache_size=100
      --table_open_cache=4000
      --tmp_table_size=128M
      --max_heap_table_size=128M
    deploy:
      resources:
        limits:
          cpus: '8'
          memory: 10G
        reservations:
          cpus: '4'
          memory: 4G
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-ppassword"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: fraud_detection_backend
    restart: unless-stopped
    environment:
      # Database configuration
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USER: fraud_user
      DB_PASSWORD: fraud_pass
      DB_NAME: fraud_detection

      # Application configuration
      APP_ENV: production
      LOG_LEVEL: INFO

      # Performance tuning for 32GB RAM system
      # i5-12400: 6 cores / 12 threads
      # process_parallel.py uses DB directly, doesn't need multiple uvicorn workers
      PARALLEL_IMPORT_WORKERS: 6

      # Database connection pool
      DB_POOL_SIZE: 20
      DB_MAX_OVERFLOW: 10

      # Uvicorn workers (FastAPI) - only 1 needed since parallel script bypasses API
      UVICORN_WORKERS: 1
    ports:
      - "8501:8501"
    volumes:
      - ./backend:/app
      - upload_data:/app/uploads
      - ./backend/logs:/app/logs
    depends_on:
      mysql:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '8'
          memory: 12G
        reservations:
          cpus: '2'
          memory: 4G
    command: >
      sh -c "
        echo 'Waiting for MySQL to be fully ready...' &&
        sleep 10 &&
        echo 'Starting FastAPI application...' &&
        uvicorn app.main:app --host 0.0.0.0 --port 8501 --workers 1 --log-level info
      "
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mysql_data:
    driver: local
  upload_data:
    driver: local
